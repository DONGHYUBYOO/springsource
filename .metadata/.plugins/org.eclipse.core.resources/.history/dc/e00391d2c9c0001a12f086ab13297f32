package com.spring.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.domain.ArticleVO;
import com.spring.domain.ModifyVO;
import com.spring.domain.ReadVO;
import com.spring.domain.RegistVO;
import com.spring.service.BoardService;

import lombok.extern.slf4j.Slf4j;
import oracle.jdbc.proxy.annotation.Post;

@Slf4j
@Controller
@RequestMapping("/board")
public class BoardController {

	@Autowired
	private BoardService service;
	
	@GetMapping("/register")
	public void registerForm() {
		log.info("/board/register.jsp Form 요청");
	}
	
	@PostMapping("/register")
	public String register(RegistVO regist) {
		log.info("Regist 처리 요청");
		log.info(""+regist);
		try {
			if(service.insertArticle(regist)>0) {
				return "redirect:/board/list";			
			}else {
				return "/board/register";
			}
		} catch (Exception e) {
			return "/board/register";
		}
		
	}
	
	@GetMapping("/list")
	public void listArticle(Model model) {
		log.info("/board/list.jsp Form 요청");
		
		List<ArticleVO> list=service.listArticle();
		model.addAttribute("list", list);		
	}	
	
	//같은 작업을 하는 Controller이기 때문에 value로 그룹화 하여 사용 가능
	//현재 VO를 모두 나눠놔서 사용불가
//	@GetMapping(value= {"/read","/modify"})
//	public void readForm(int bno, Model model) {
//		log.info("/board/read.jsp Form 요청");
//		log.info(""+bno);
//		
//		ReadVO read=service.getArticle(bno);
//		model.addAttribute("read",read);
//	}
	
	@GetMapping("/read")
	public void readForm(int bno, Model model) {
		log.info("/board/read.jsp Form 요청");
		log.info(""+bno);
		
		ReadVO read=service.getArticle(bno);
		model.addAttribute("read",read);
	}
	
	@GetMapping("/modify")
	public void modifyForm(int bno, Model model) {
		log.info("/board/modify.jsp Form 요청");
		log.info(""+bno);
		
		ReadVO modify=service.getArticle(bno);
		model.addAttribute("modify",modify);		
	}
	
	@PostMapping("/modify")
	public String modify(ModifyVO modify) {
		log.info("Modify 처리 요청");
		log.info(""+modify);
		
		try {
			if(service.modifyArticle(modify)>0) {
				return "redirect:/board/read?bno="+modify.getBno();
			}else {
				return "redirect:/board/modify?bno="+modify.getBno();
			}
		} catch (Exception e) {
			return "redirect:/board/modify?bno="+modify.getBno();
		}
	}
	
	@PostMapping("/remove")
	public String remove(int bno) {
		log.info("Remove 처리 요청");
		log.info(""+bno);
		
		if(service.removeArticle(bno)>0) {
			return "redirect:/board/list";
		}else {
			return "redirect:/board/modify?bno="+bno;
		}
	}
}
